{"version":3,"sources":["src/helpers.js","src/test.js"],"names":["addDOMElement","wrapper","tag","classList","attList","value","DOMElement","document","createElement","innerHTML","length","forEach","add","item","Object","keys","setAttribute","key","appendChild","uniteObjects","first","second","result","assign","Array","Set","a","b","c","d","e","console","log","JSON","stringify"],"mappings":"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","file":"test.251dcc8c.map","sourceRoot":"..","sourcesContent":["/**\n * Adds an element to DOM\n * @param   {Node} wrapper \n * @param   {String} tag Tag for element\n * @param   {Array} classList List of classes\n * @param   {Object} attList List of attributes\n *\n * @returns {Node} DOM object\n */\nexport let addDOMElement = function( wrapper, tag='div', classList=[], attList={}, value='' ) {\n    \n  let DOMElement = document.createElement(tag);\n  DOMElement.innerHTML = value;\n\n  // TODO: Проверить classList и attList на типы!\n\n  if (classList.length > 0) {\n    classList.forEach( item => DOMElement.classList.add(item));\n  }\n\n  if (attList.length > 0) {\n    Object.keys(attList).forEach( key  => DOMElement.setAttribute(key, attList[key]) );\n  }\n\n  wrapper.appendChild(DOMElement);\n  \n  return DOMElement;\n\n};\n\n/**\n * Unites two Objects\n * TODO: Switch to lodash?\n * @param  {Object} first Object (defaults)\n * @param  {Object} second Object (user)\n */\nexport let uniteObjects = function( first, second ) {\n\n  let result = Object.assign({}, first);\n  result = Object.assign(result, second);\n\n  Object.keys(result).forEach( (key) => {\n    if (( first[key] instanceof Array ) && ( second[key] instanceof Array )) {\n      // concatenates and uniques array \n      result[key] = [...new Set([...first[key], ...second[key]])];\n    } else if (( first[key] instanceof Object ) && ( second[key] instanceof Object )) {\n      result[key] = uniteObjects(first[key], second[key]);\n    }\n  });\n\n  return result;\n};\n\n","import { uniteObjects } from './helpers.js';\n\nlet a = {\n  a: 1,\n  b: 'one',\n  c: {\n    a: 1,\n    b: 'one'\n  },\n  d: [1, 2]\n};\n\nlet b = {\n  a: 2,\n  b: 'two',\n  c: {\n    b: 'two',\n    c: 0.2\n  },\n  d: [2, 3, { a: 4, b: 5} ],\n  e: 'fine'\n};\n\n\nlet d = {\n  a: 2,\n  b: 'two',\n  c: {\n    a: 1,\n    b: 'two',\n    c: 0.2\n  },\n  d: [1, 2, 3, {a: 4, b: 5}],\n  e: 'fine'\n};\n\nconsole.log('Here we go:');\n\nlet c = uniteObjects(a,b);\n\nif (true) {\n  console.log('Here we get:');\n  console.log(c);\n  console.log(d);\n  console.log( JSON.stringify(c)==JSON.stringify(d) ? 'EQUAL' : 'different' );\n}\n\n\n"]}